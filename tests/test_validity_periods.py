import pytest

from src.util import get_validity_periods


@pytest.mark.parametrize(
    "T, window, vp, expected",
    [
        (list(range(8760)), [0,1,2], 5, [[0,1,2,3,4], [1,2,3,4,5], [2,3,4,5,6]]),
        (list(range(8760)), [1,2,3], 5, [[0,1,2,3,4], [1,2,3,4,5], [2,3,4,5,6], [3,4,5,6,7]]),
        (list(range(8760)), [2,3,4], 4, [[0,1,2,3], [1,2,3,4], [2,3,4,5], [3,4,5,6], [4,5,6,7]]),
        (list(range(8760)), [3,4,5], 4, [[0,1,2,3], [1,2,3,4], [2,3,4,5], [3,4,5,6], [4,5,6,7], [5,6,7,8]]),
        (list(range(8760)), [4,5,6], 4, [[1,2,3,4], [2,3,4,5], [3,4,5,6], [4,5,6,7], [5,6,7,8], [6,7,8,9]]),
        (list(range(8760)), [8750, 8751, 8752], 4, [[8747, 8748, 8749, 8750], [8748, 8749, 8750, 8751], [8749, 8750, 8751, 8752], [8750, 8751, 8752, 8753], [8751, 8752, 8753, 8754], [8752, 8753, 8754, 8755]]),
        (list(range(8760)), [8756, 8757, 8758], 4, [[8753, 8754, 8755, 8756], [8754, 8755, 8756, 8757], [8755, 8756, 8757, 8758], [8756, 8757, 8758, 8759]]),
        (list(range(8760)), [8757, 8758, 8759], 4, [[8754, 8755, 8756, 8757], [8755, 8756, 8757, 8758], [8756, 8757, 8758, 8759]]),
    ]
)
def test_compliance_periods(T, window, vp, expected):
    result = get_validity_periods(window, vp)
    assert result == expected


@pytest.mark.parametrize(
    "T, window, vp, expected",
    [
        (list(range(8760)), [0,1,2], 5, []),
        (list(range(8760)), [1,2,3], 5, []),
        (list(range(8760)), [2,3,4], 4, [[0,1,2,3], [1,2,3,4]]),
        (list(range(8760)), [3,4,5], 4, [[0,1,2,3], [1,2,3,4], [2,3,4,5]]),
        (list(range(8760)), [4,5,6], 4, [[1,2,3,4], [2,3,4,5], [3,4,5,6]]),
        (list(range(8760)), [8750, 8751, 8752], 4, [[8747, 8748, 8749, 8750], [8748, 8749, 8750, 8751], [8749, 8750, 8751, 8752]]),
        (list(range(8760)), [8756, 8757, 8758], 4, [[8753, 8754, 8755, 8756], [8754, 8755, 8756, 8757], [8755, 8756, 8757, 8758]]),
        (list(range(8760)), [8757, 8758, 8759], 4, [[8754, 8755, 8756, 8757], [8755, 8756, 8757, 8758], [8756, 8757, 8758, 8759]]),
    ]
)
def test_compliance_periods_no_future(T, window, vp, expected):
    result = get_validity_periods(window, vp, future=False)
    assert result == expected


@pytest.mark.parametrize(
    "T, window, vp, expected",
    [
        (list(range(8760)), [0,1,2], 5, [[0,1,2,3,4], [1,2,3,4,5], [2,3,4,5,6]]),
        (list(range(8760)), [1,2,3], 5, [[1,2,3,4,5], [2,3,4,5,6], [3,4,5,6,7]]),
        (list(range(8760)), [2,3,4], 4, [[2,3,4,5], [3,4,5,6], [4,5,6,7]]),
        (list(range(8760)), [3,4,5], 4, [[3,4,5,6], [4,5,6,7], [5,6,7,8]]),
        (list(range(8760)), [4,5,6], 4, [[4,5,6,7], [5,6,7,8], [6,7,8,9]]),
        (list(range(8760)), [8750, 8751, 8752], 4, [[8750, 8751, 8752, 8753], [8751, 8752, 8753, 8754], [8752, 8753, 8754, 8755]]),
        (list(range(8760)), [8756, 8757, 8758], 4, [[8756, 8757, 8758, 8759]]),
        (list(range(8760)), [8757, 8758, 8759], 4, []),
    ]
)
def test_compliance_periods_no_past(T, window, vp, expected):
    result = get_validity_periods(window, vp, past=False)
    assert result == expected
